From 3720a3b939e05e3dcfed1a0244f4063f08b4bddb Mon Sep 17 00:00:00 2001
From: Jon Fawcett <jonfawcett10@gmail.com>
Date: Fri, 6 Mar 2020 11:04:30 -0500
Subject: [PATCH 1/5] Dose Strategy Automatic Switching - Moved Dose Strategy
 to its own settings area - Added toggle to enable automatic switching - Added
 switching glucose threshold setting - Added switching code during the update
 function

---
 Loop/Managers/LoopDataManager.swift           |  8 ++
 .../SettingsTableViewController.swift         | 81 +++++++++++++++++++
 LoopCore/LoopSettings.swift                   | 20 ++++-
 3 files changed, 108 insertions(+), 1 deletion(-)

diff --git a/Loop/Managers/LoopDataManager.swift b/Loop/Managers/LoopDataManager.swift
index ab469aa59..33bc6b837 100644
--- a/Loop/Managers/LoopDataManager.swift
+++ b/Loop/Managers/LoopDataManager.swift
@@ -1185,6 +1185,14 @@ extension LoopDataManager {
         self.predictedGlucose = predictedGlucose
         let predictedGlucoseIncludingPendingInsulin = try predictGlucose(using: settings.enabledEffects, includingPendingInsulin: true)
         self.predictedGlucoseIncludingPendingInsulin = predictedGlucoseIncludingPendingInsulin
+        
+        if( settings.dosingStrategyAutomationEnabled && settings.dosingStrategyThreshold?.rawValue != nil){
+            if( glucose.quantity > HKQuantity(unit : HKUnit.milligramsPerDeciliter, doubleValue: settings.dosingStrategyThreshold!.value)){
+                settings.dosingStrategy = .automaticBolus
+            } else {
+                settings.dosingStrategy = .tempBasalOnly
+            }
+        }
 
         guard
             let maxBasal = settings.maximumBasalRatePerHour,
diff --git a/Loop/View Controllers/SettingsTableViewController.swift b/Loop/View Controllers/SettingsTableViewController.swift
index 9abe853bb..d40bd2ed2 100644
--- a/Loop/View Controllers/SettingsTableViewController.swift	
+++ b/Loop/View Controllers/SettingsTableViewController.swift	
@@ -46,6 +46,7 @@ final class SettingsTableViewController: UITableViewController {
         case pump
         case cgm
         case configuration
+        case strategy
         case services
         case testingPumpDataDeletion
         case testingCGMDataDeletion
@@ -74,6 +75,12 @@ final class SettingsTableViewController: UITableViewController {
         case carbRatio
         case insulinSensitivity
     }
+    
+    fileprivate enum StrategyRow: Int, CaseCountable {
+        case dosingStrategy = 0
+        case dosingStrategyAutomationEnabled
+        case dosingStrategyThreshold
+    }
 
     fileprivate enum ServiceRow: Int, CaseCountable {
         case nightscout = 0
@@ -147,6 +154,8 @@ final class SettingsTableViewController: UITableViewController {
             return CGMRow.count
         case .configuration:
             return ConfigurationRow.count
+        case .strategy:
+            return StrategyRow.count
         case .services:
             return ServiceRow.count
         case .testingPumpDataDeletion, .testingCGMDataDeletion:
@@ -290,6 +299,36 @@ final class SettingsTableViewController: UITableViewController {
                 }
             }
 
+            configCell.accessoryType = .disclosureIndicator
+            return configCell
+        case .strategy:
+            let configCell = tableView.dequeueReusableCell(withIdentifier: SettingsTableViewCell.className, for: indexPath)
+
+            switch StrategyRow(rawValue: indexPath.row)! {
+                case .dosingStrategy:
+                    configCell.textLabel?.text = NSLocalizedString("Dosing Strategy", comment: "The title text for the dosing strategy setting row")
+                    configCell.detailTextLabel?.text = dataManager.loopManager.settings.dosingStrategy.title
+                case .dosingStrategyAutomationEnabled:
+                    let switchCell = tableView.dequeueReusableCell(withIdentifier: SwitchTableViewCell.className, for: indexPath) as! SwitchTableViewCell
+                    
+                    switchCell.selectionStyle = .none
+                    switchCell.switch?.isOn = dataManager.loopManager.settings.dosingStrategyAutomationEnabled
+                    switchCell.textLabel?.text = NSLocalizedString("Auto Strategy Switching", comment: "The title text for the Dosing Strategy enabled switch cell")
+
+                    switchCell.switch?.addTarget(self, action: #selector(dosingStrategyAutomationEnabledChanged(_:)), for: .valueChanged)
+
+                    return switchCell
+                case .dosingStrategyThreshold:
+                    configCell.textLabel?.text = NSLocalizedString("Dose Switching Threshold", comment: "The title text in settings")
+                    
+                    if let dosingStrategyThreshold = dataManager.loopManager.settings.dosingStrategyThreshold {
+                        let value = valueNumberFormatter.string(from: dosingStrategyThreshold.value, unit: dosingStrategyThreshold.unit) ?? SettingsTableViewCell.TapToSetString
+                        configCell.detailTextLabel?.text = value
+                    } else {
+                        configCell.detailTextLabel?.text = SettingsTableViewCell.TapToSetString
+                    }
+            }
+
             configCell.accessoryType = .disclosureIndicator
             return configCell
         case .services:
@@ -342,6 +381,8 @@ final class SettingsTableViewController: UITableViewController {
             return NSLocalizedString("Continuous Glucose Monitor", comment: "The title of the continuous glucose monitor section in settings")
         case .configuration:
             return NSLocalizedString("Configuration", comment: "The title of the configuration section in settings")
+        case .strategy:
+                   return NSLocalizedString("Dosing Strategy", comment: "The title of the strategy section in settings")
         case .services:
             return NSLocalizedString("Services", comment: "The title of the services section in settings")
         case .testingPumpDataDeletion, .testingCGMDataDeletion:
@@ -548,6 +589,30 @@ final class SettingsTableViewController: UITableViewController {
 
                 show(vc, sender: sender)
             }
+        case .strategy:
+            let row = StrategyRow(rawValue: indexPath.row)!
+            switch row {
+                case .dosingStrategy:
+                    performSegue(withIdentifier: DosingStrategySelectionViewController.className, sender: sender)
+                case .dosingStrategyAutomationEnabled:
+                    break
+                case .dosingStrategyThreshold:
+                    if let dosingStrategyThreshold = dataManager.loopManager.settings.dosingStrategyThreshold {
+                        let vc = GlucoseThresholdTableViewController(threshold: dosingStrategyThreshold.value, glucoseUnit: dosingStrategyThreshold.unit)
+                        vc.delegate = self
+                        vc.indexPath = indexPath
+                        vc.title = sender?.textLabel?.text
+                        self.show(vc, sender: sender)
+                    } else if let unit = dataManager.loopManager.glucoseStore.preferredUnit {
+                        let vc = GlucoseThresholdTableViewController(threshold: nil, glucoseUnit: unit)
+                        vc.delegate = self
+                        vc.indexPath = indexPath
+                        vc.title = sender?.textLabel?.text
+                        vc.placeholder = "Enter switching threshold"
+                        vc.contextHelp = "If Auto Strategy Switching is enabled, when current glucose is above the switching threshold, Loop will use Automatic Bolus strategy. When glucose is at or below the switching threshold, Loop will use Temp Basal Only strategy."
+                        self.show(vc, sender: sender)
+                    }
+            }
         case .loop:
             switch LoopRow(rawValue: indexPath.row)! {
             case .diagnostic:
@@ -607,6 +672,10 @@ final class SettingsTableViewController: UITableViewController {
     @objc private func dosingEnabledChanged(_ sender: UISwitch) {
         dataManager.loopManager.settings.dosingEnabled = sender.isOn
     }
+    
+    @objc private func dosingStrategyAutomationEnabledChanged(_ sender: UISwitch) {
+        dataManager.loopManager.settings.dosingStrategyAutomationEnabled = sender.isOn
+    }
 }
 
 // MARK: - DeviceManager view controller delegation
@@ -834,6 +903,18 @@ extension SettingsTableViewController: LoopKitUI.TextFieldTableViewControllerDel
                 default:
                     assertionFailure()
                 }
+            case .strategy:
+                switch StrategyRow(rawValue: indexPath.row)! {
+                     case .dosingStrategyThreshold:
+                       if let controller = controller as? GlucoseThresholdTableViewController,
+                           let value = controller.value, let dosingStrategyThreshold = valueNumberFormatter.number(from: value)?.doubleValue {
+                           dataManager.loopManager.settings.dosingStrategyThreshold = GlucoseThreshold(unit: controller.glucoseUnit, value: dosingStrategyThreshold)
+                       } else {
+                           dataManager.loopManager.settings.dosingStrategyThreshold = nil
+                       }
+                    default:
+                        assertionFailure()
+                }
             default:
                 assertionFailure()
             }
diff --git a/LoopCore/LoopSettings.swift b/LoopCore/LoopSettings.swift
index fcfc26a84..9c77b05b4 100644
--- a/LoopCore/LoopSettings.swift
+++ b/LoopCore/LoopSettings.swift
@@ -59,6 +59,10 @@ public struct LoopSettings: Equatable {
     public let retrospectiveCorrectionEnabled = true
     
     public var dosingStrategy: DosingStrategy = .tempBasalOnly
+    
+    public var dosingStrategyAutomationEnabled = false
+    
+    public var dosingStrategyThreshold: GlucoseThreshold? = nil
 
     /// The interval over which to aggregate changes in glucose for retrospective correction
     public let retrospectiveCorrectionGroupingInterval = TimeInterval(minutes: 30)
@@ -118,13 +122,17 @@ public struct LoopSettings: Equatable {
         glucoseTargetRangeSchedule: GlucoseRangeSchedule? = nil,
         maximumBasalRatePerHour: Double? = nil,
         maximumBolus: Double? = nil,
-        suspendThreshold: GlucoseThreshold? = nil
+        suspendThreshold: GlucoseThreshold? = nil,
+        dosingStrategyAutomationEnabled: Bool = false,
+        dosingStrategyThreshold: GlucoseThreshold? = nil
     ) {
         self.dosingEnabled = dosingEnabled
         self.glucoseTargetRangeSchedule = glucoseTargetRangeSchedule
         self.maximumBasalRatePerHour = maximumBasalRatePerHour
         self.maximumBolus = maximumBolus
         self.suspendThreshold = suspendThreshold
+        self.dosingStrategyAutomationEnabled = dosingStrategyAutomationEnabled
+        self.dosingStrategyThreshold = dosingStrategyThreshold
     }
 }
 
@@ -263,6 +271,14 @@ extension LoopSettings: RawRepresentable {
             let dosingStrategy = DosingStrategy(rawValue: rawDosingStrategy) {
             self.dosingStrategy = dosingStrategy
         }
+        
+        if let dosingStrategyAutomationEnabled = rawValue["dosingStrategyAutomationEnabled"] as? Bool {
+            self.dosingStrategyAutomationEnabled = dosingStrategyAutomationEnabled
+        }
+        
+        if let rawDosingStrategyThreshold = rawValue["dosingStrategyThreshold"] as? GlucoseThreshold.RawValue {
+            self.dosingStrategyThreshold = GlucoseThreshold(rawValue: rawDosingStrategyThreshold)
+        }
 
     }
 
@@ -281,6 +297,8 @@ extension LoopSettings: RawRepresentable {
         raw["maximumBolus"] = maximumBolus
         raw["minimumBGGuard"] = suspendThreshold?.rawValue
         raw["dosingStrategy"] = dosingStrategy.rawValue
+        raw["dosingStrategyAutomationEnabled"] = dosingStrategyAutomationEnabled
+        raw["dosingStrategyThreshold"] = dosingStrategyThreshold?.rawValue
 
         return raw
     }

From 8e19aca613edb721d3dc30f387c95a5e308bca1a Mon Sep 17 00:00:00 2001
From: Jon Fawcett <jonfawcett10@gmail.com>
Date: Fri, 6 Mar 2020 22:26:54 -0500
Subject: [PATCH 2/5] Correction to settings for automatic dose switching

---
 .../SettingsTableViewController.swift         | 28 ++++++++-----------
 1 file changed, 11 insertions(+), 17 deletions(-)

diff --git a/Loop/View Controllers/SettingsTableViewController.swift b/Loop/View Controllers/SettingsTableViewController.swift
index d40bd2ed2..47c2bc536 100644
--- a/Loop/View Controllers/SettingsTableViewController.swift	
+++ b/Loop/View Controllers/SettingsTableViewController.swift	
@@ -71,7 +71,6 @@ final class SettingsTableViewController: UITableViewController {
         case basalRate
         case deliveryLimits
         case insulinModel
-        case dosingStrategy
         case carbRatio
         case insulinSensitivity
     }
@@ -278,9 +277,6 @@ final class SettingsTableViewController: UITableViewController {
                 } else {
                     configCell.detailTextLabel?.text = SettingsTableViewCell.TapToSetString
                 }
-            case .dosingStrategy:
-                configCell.textLabel?.text = NSLocalizedString("Dosing Strategy", comment: "The title text for the dosing strategy setting row")
-                configCell.detailTextLabel?.text = dataManager.loopManager.settings.dosingStrategy.title
             case .deliveryLimits:
                 configCell.textLabel?.text = NSLocalizedString("Delivery Limits", comment: "Title text for delivery limits")
 
@@ -555,8 +551,6 @@ final class SettingsTableViewController: UITableViewController {
                 }
             case .insulinModel:
                 performSegue(withIdentifier: InsulinModelSettingsViewController.className, sender: sender)
-            case .dosingStrategy:
-                performSegue(withIdentifier: DosingStrategySelectionViewController.className, sender: sender)
             case .deliveryLimits:
                 let vc = DeliveryLimitSettingsTableViewController(style: .grouped)
 
@@ -869,8 +863,8 @@ extension SettingsTableViewController: DosingStrategySelectionViewControllerDele
         }
 
         switch sections[indexPath.section] {
-        case .configuration:
-            switch ConfigurationRow(rawValue: indexPath.row)! {
+        case .strategy:
+            switch StrategyRow(rawValue: indexPath.row)! {
             case .dosingStrategy:
                 if let strategy = controller.dosingStrategy {
                     dataManager.loopManager.settings.dosingStrategy = strategy
@@ -905,18 +899,18 @@ extension SettingsTableViewController: LoopKitUI.TextFieldTableViewControllerDel
                 }
             case .strategy:
                 switch StrategyRow(rawValue: indexPath.row)! {
-                     case .dosingStrategyThreshold:
-                       if let controller = controller as? GlucoseThresholdTableViewController,
-                           let value = controller.value, let dosingStrategyThreshold = valueNumberFormatter.number(from: value)?.doubleValue {
-                           dataManager.loopManager.settings.dosingStrategyThreshold = GlucoseThreshold(unit: controller.glucoseUnit, value: dosingStrategyThreshold)
-                       } else {
-                           dataManager.loopManager.settings.dosingStrategyThreshold = nil
-                       }
+                    case .dosingStrategyThreshold:
+                        if let controller = controller as? GlucoseThresholdTableViewController,
+                            let value = controller.value, let dosingStrategyThreshold = valueNumberFormatter.number(from: value)?.doubleValue {
+                            dataManager.loopManager.settings.dosingStrategyThreshold = GlucoseThreshold(unit: controller.glucoseUnit, value: dosingStrategyThreshold)
+                        } else {
+                            dataManager.loopManager.settings.dosingStrategyThreshold = nil
+                        }
                     default:
                         assertionFailure()
                 }
-            default:
-                assertionFailure()
+                default:
+                    assertionFailure()
             }
         }
 

From 482838da241fc8e6e12d519c92ee4ae0a6e6043f Mon Sep 17 00:00:00 2001
From: Jon Fawcett <jonfawcett10@gmail.com>
Date: Mon, 9 Mar 2020 12:40:32 -0400
Subject: [PATCH 3/5] Fix for MMOL

---
 Loop/Managers/LoopDataManager.swift | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/Loop/Managers/LoopDataManager.swift b/Loop/Managers/LoopDataManager.swift
index 33bc6b837..c5f2e5c89 100644
--- a/Loop/Managers/LoopDataManager.swift
+++ b/Loop/Managers/LoopDataManager.swift
@@ -1187,7 +1187,7 @@ extension LoopDataManager {
         self.predictedGlucoseIncludingPendingInsulin = predictedGlucoseIncludingPendingInsulin
         
         if( settings.dosingStrategyAutomationEnabled && settings.dosingStrategyThreshold?.rawValue != nil){
-            if( glucose.quantity > HKQuantity(unit : HKUnit.milligramsPerDeciliter, doubleValue: settings.dosingStrategyThreshold!.value)){
+            if( glucose.quantity > HKQuantity(unit : settings.glucoseUnit ?? .milligramsPerDeciliter, doubleValue: settings.dosingStrategyThreshold!.value)){
                 settings.dosingStrategy = .automaticBolus
             } else {
                 settings.dosingStrategy = .tempBasalOnly

From c4a1f749b552e6120d314c8c12343dfd5653e788 Mon Sep 17 00:00:00 2001
From: Jon Fawcett <jonfawcett10@gmail.com>
Date: Tue, 10 Mar 2020 09:22:48 -0400
Subject: [PATCH 4/5] Fixed context help text under switching threshold setting

---
 Loop/View Controllers/SettingsTableViewController.swift | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/Loop/View Controllers/SettingsTableViewController.swift b/Loop/View Controllers/SettingsTableViewController.swift
index 47c2bc536..c68d2b522 100644
--- a/Loop/View Controllers/SettingsTableViewController.swift	
+++ b/Loop/View Controllers/SettingsTableViewController.swift	
@@ -596,6 +596,8 @@ final class SettingsTableViewController: UITableViewController {
                         vc.delegate = self
                         vc.indexPath = indexPath
                         vc.title = sender?.textLabel?.text
+                        vc.placeholder = "Enter switching threshold"
+                        vc.contextHelp = "If Auto Strategy Switching is enabled, when current glucose is above the switching threshold, Loop will use Automatic Bolus strategy. When glucose is at or below the switching threshold, Loop will use Temp Basal Only strategy."
                         self.show(vc, sender: sender)
                     } else if let unit = dataManager.loopManager.glucoseStore.preferredUnit {
                         let vc = GlucoseThresholdTableViewController(threshold: nil, glucoseUnit: unit)

From 06b8a116eb475401c138042fee84ef600800f658 Mon Sep 17 00:00:00 2001
From: Jon Fawcett <jonfawcett10@gmail.com>
Date: Thu, 13 Aug 2020 12:48:34 -0400
Subject: [PATCH 5/5] Fix: Upload NS profile only on Basal, ISF, CR change

---
 Loop/Managers/LoopDataManager.swift       | 13 +++++++++++++
 Loop/Managers/NightscoutDataManager.swift |  4 ++--
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/Loop/Managers/LoopDataManager.swift b/Loop/Managers/LoopDataManager.swift
index a8496c7d5..f9977fa1e 100644
--- a/Loop/Managers/LoopDataManager.swift
+++ b/Loop/Managers/LoopDataManager.swift
@@ -330,6 +330,7 @@ extension LoopDataManager {
             doseStore.basalProfile = newValue
             UserDefaults.appGroup?.basalRateSchedule = newValue
             notify(forChange: .preferences)
+            notifyUpload(forChange: .preferences)
 
             if let newValue = newValue, let oldValue = doseStore.basalProfile, newValue.items != oldValue.items {
                 AnalyticsManager.shared.didChangeBasalRateSchedule()
@@ -357,6 +358,7 @@ extension LoopDataManager {
             carbsOnBoard = nil
 
             notify(forChange: .preferences)
+            notifyUpload(forChange: .preferences)
         }
     }
 
@@ -408,6 +410,7 @@ extension LoopDataManager {
                 self.insulinEffect = nil
 
                 self.notify(forChange: .preferences)
+                self.notifyUpload(forChange: .preferences)
             }
         }
     }
@@ -859,6 +862,15 @@ extension LoopDataManager {
             ]
         )
     }
+    
+    private func notifyUpload(forChange context: LoopUpdateContext) {
+        NotificationCenter.default.post(name: .LoopDataUpload,
+            object: self,
+            userInfo: [
+                type(of: self).LoopUpdateContextKey: context.rawValue
+            ]
+        )
+    }
 
     /// Computes amount of insulin from boluses that have been issued and not confirmed, and
     /// remaining insulin delivery from temporary basal rate adjustments above scheduled rate
@@ -1580,6 +1592,7 @@ extension LoopDataManager {
 
 extension Notification.Name {
     static let LoopDataUpdated = Notification.Name(rawValue: "com.loopkit.Loop.LoopDataUpdated")
+    static let LoopDataUpload = Notification.Name(rawValue: "com.loopkit.Loop.LoopDataUpload")
     static let LoopRunning = Notification.Name(rawValue: "com.loopkit.Loop.LoopRunning")
     static let LoopCompleted = Notification.Name(rawValue: "com.loopkit.Loop.LoopCompleted")
 }
diff --git a/Loop/Managers/NightscoutDataManager.swift b/Loop/Managers/NightscoutDataManager.swift
index e2d020d39..48823116e 100644
--- a/Loop/Managers/NightscoutDataManager.swift
+++ b/Loop/Managers/NightscoutDataManager.swift
@@ -35,11 +35,11 @@ final class NightscoutDataManager {
         self.deviceManager = deviceDataManager
 
         NotificationCenter.default.addObserver(self, selector: #selector(loopCompleted(_:)), name: .LoopCompleted, object: deviceDataManager.loopManager)
-        NotificationCenter.default.addObserver(self, selector: #selector(loopDataUpdated(_:)), name: .LoopDataUpdated, object: deviceDataManager.loopManager)
+        NotificationCenter.default.addObserver(self, selector: #selector(loopDataUpload(_:)), name: .LoopDataUpload, object: deviceDataManager.loopManager)
     }
 
 
-    @objc func loopDataUpdated(_ note: Notification) {
+    @objc func loopDataUpload(_ note: Notification) {
         guard
             let rawContext = note.userInfo?[LoopDataManager.LoopUpdateContextKey] as? LoopDataManager.LoopUpdateContext.RawValue,
             let context = LoopDataManager.LoopUpdateContext(rawValue: rawContext),
